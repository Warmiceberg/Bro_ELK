Logstash-Forwarder Configuration Example

{
  # The network section covers network configuration :)
  "network": {
    # A list of downstream servers listening for our messages.
    # logstash-forwarder will pick one at random and only switch if
    # the selected one appears to be dead or unresponsive
    "servers": [ "YOUR_ELK_IP:PORT" ],

    # The path to your client ssl certificate (optional)
    "ssl certificate": "./logstash-forwarder.crt",
    # The path to your client ssl key (optional)
    #"ssl key": "./logstash-forwarder.key",

    # The path to your trusted ssl CA file. This is used
    # to authenticate your downstream server.
    #"ssl ca": "./logstash-forwarder.crt",

    # Network timeout in seconds. This is most important for
    # logstash-forwarder determining whether to stop waiting for an
    # acknowledgement from the downstream server. If an timeout is reached,
    # logstash-forwarder will assume the connection or server is bad and
    # will connect to a server chosen at random from the servers list.
    "timeout": 15
  },

  # The list of files configurations
  "files": [
    # An array of hashes. Each hash tells what paths to watch and
    # what fields to annotate on events from those paths.
    {
      "paths": [ "/usr/local/bro/logs/current/conn.log" ],
      "codec" : "json",
      "fields": { "type": "bro_conn” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/dns.log" ],
      "codec" : "json",
      "fields": { "type": "bro_dns” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/dpd.log" ],
      "codec" : "json",
      "fields": { "type": "bro_dpd” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/ftp.log" ],
      "codec" : "json",
      "fields": { "type": "bro_ftp” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/files.log" ],
      "codec" : "json",
      "fields": { "type": "bro_files” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/http.log" ],
      "codec" : "json",
      "fields": { "type": "bro_http” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/intel.log" ],
      "codec" : "json",
      "fields": { "type": "bro_intel” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/irc.log" ],
      "codec" : "json",
      "fields": { "type": "bro_irc” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/notice.log" ],
      "codec" : "json",
      "fields": { "type": "bro_notice” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/pe.log" ],
      "codec" : "json",
      "fields": { "type": "bro_pe” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/radius.log" ],
      "codec" : "json",
      "fields": { "type": "bro_radius” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/rdp.log" ],
      "codec" : "json",
      "fields": { "type": "bro_rdp” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/sip.log" ],
      "codec" : "json",
      "fields": { "type": "bro_sip” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/smtp.log" ],
      "codec" : "json",
      "fields": { "type": "bro_smtp” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/snmp.log" ],
      "codec" : "json",
      "fields": { "type": "bro_snmp” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/software.log" ],
      "codec" : "json",
      "fields": { "type": "bro_software” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/ssh.log" ],
      "codec" : "json",
      "fields": { "type": "bro_ssh” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/ssl.log" ],
      "codec" : "json",
      "fields": { "type": "bro_ssl” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/tunnel.log" ],
      "codec" : "json",
      "fields": { "type": "bro_tunnel” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/weird.log" ],
      "codec" : "json",
      "fields": { "type": "bro_weird” }
    },
    {
      "paths": [ "/usr/local/bro/logs/current/x509.log" ],
      "codec" : "json",
      "fields": { "type": "bro_x509” }
    }
  ]
}

